{"version":3,"sources":["../src/Request.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;;;;;;;;IAYM,O;AAEF,qBAAY,IAAZ,EAAkB,KAAlB,EAAyB,MAAzB,EAAiC;AAAA;;AAC7B,aAAK,IAAL,GAAY,IAAZ;AACA,aAAK,KAAL,GAAa,KAAb;AACA,aAAK,MAAL,GAAc,MAAd;AACH;;;;;;;;;;;;;+BASa,I,EAAM,K,EAAO,I,EAAM,O,EAAS;;AAEtC,gBAAI,SAAS,OAAO,MAAP,CAAc,IAAd,CAAb;AACA,iBAAK,OAAL,CAAa,UAAC,GAAD,EAAM,KAAN;AAAA,uBAAgB,OAAO,IAAI,IAAX,IAAmB,QAAQ,QAAQ,CAAhB,CAAnC;AAAA,aAAb;AACA,mBAAO,IAAI,OAAJ,CAAY,IAAZ,EAAkB,aAAG,KAAH,CAAS,KAAT,CAAlB,EAAmC,MAAnC,CAAP;AAEH;;;;;;kBAIU,O","file":"Request.js","sourcesContent":["import url from 'url';\nimport qs from 'qs';\n\n/**\n * Request is generated each time the user navigates.\n * @param {string} path \n * @param {object} query \n * @param {object} params \n *\n * @property {string} path - The request path.\n * @property {object} query - If the hash contains a query part, it is treated as a query string.\n * @property {object} params - An object containing properties mapped to the named route “parameters”.\n */\nclass Request {\n\n    constructor(path, query, params) {\n        this.path = path;\n        this.query = query;\n        this.params = params;\n    }\n\n    /**\n     * create a new Request object\n     * @param {string} path\n     * @param {string} query \n     * @param {array} keys \n     * @param {array} results \n     */\n    static create(path, query, keys, results) {\n\n        var params = Object.create(null);\n        keys.forEach((key, index) => params[key.name] = results[index + 1]);\n        return new Request(path, qs.parse(query), params);\n\n    }\n\n}\n\nexport default Request\n"]}